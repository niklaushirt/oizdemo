apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: oiz-demo-git
spec:
  type: git
  params:
    - name: revision
      value: master
    - name: url
      value: https://github.com/niklaushirt/oizdemo
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: oiz-demo-image-leeroy-web
spec:
  type: image
  params:
    - name: url
      value: quay.io/niklaushirtibm/test
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-docker-image-from-git-source
spec:
  params:
    - name: pathToDockerFile
      type: string
      description: The path to the dockerfile to build
      default: $(resources.inputs.docker-source.path)/src/Dockerfile
    - name: pathToContext
      type: string
      description: |
        The build context used by Kaniko
        (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
      default: $(resources.inputs.docker-source.path)/src
  resources:
    inputs:
      - name: docker-source
        type: git
    outputs:
      - name: builtImage
        type: image
  steps:
    - name: ls
      image: busybox
      script: ls
    - name: echo2
      image: busybox
      script: echo $(params.pathToDockerFile)
    - name: echo
      image: busybox
      script: cat $(params.pathToDockerFile)
    - name: echo1
      image: busybox
      script: echo $(resources.outputs.builtImage.url)
    - name: build-and-push
      securityContext:
        runAsUser: 0
      image: gcr.io/kaniko-project/executor:v0.17.1
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(params.pathToDockerFile)
        - --destination=$(resources.outputs.builtImage.url)
        - --context=$(params.pathToContext)
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oiz-demo-service-account
secrets:
  - name: regcred
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: build-docker-image-from-git-source-task-run
spec:
  serviceAccountName: oiz-demo-service-account
  taskRef:
    name: build-docker-image-from-git-source
  resources:
    inputs:
      - name: docker-source
        resourceRef:
          name: oiz-demo-git
    outputs:
      - name: builtImage
        resourceRef:
          name: oiz-demo-image-leeroy-web
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tutorial-pipeline
spec:
  resources:
    - name: source-repo
      type: git
    - name: web-image
      type: image
  tasks:
    - name: build-oiz-demo-web
      taskRef:
        name: build-docker-image-from-git-source
      resources:
        inputs:
          - name: docker-source
            resource: source-repo
        outputs:
          - name: builtImage
            resource: web-image
    - name: deploy-web
      taskRef:
        name: deploy-using-kubectl
      resources:
        inputs:
          - name: source
            resource: source-repo
          - name: image
            resource: web-image
            from:
              - build-oiz-demo-web
      params:
        - name: path
          value: /workspace/source/examples/microservices/leeroy-web/kubernetes/deployment.yaml #configure: may change according to your source
        - name: yamlPathToImage
          value: "spec.template.spec.containers[0].image"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-using-kubectl
spec:
  params:
    - name: path
      type: string
      description: Path to the manifest to apply
    - name: yamlPathToImage
      type: string
      description: |
        The path to the image to replace in the yaml manifest (arg to yq)
  resources:
    inputs:
      - name: source
        type: git
      - name: image
        type: image
  steps:
    - name: replace-image
      image: mikefarah/yq
      command: ["yq"]
      args:
        - "w"
        - "-i"
        - "$(params.path)"
        - "$(params.yamlPathToImage)"
        - "$(resources.inputs.image.url)"
    - name: run-kubectl
      image: lachlanevenson/k8s-kubectl
      command: ["kubectl"]
      args:
        - "apply"
        - "-f"
        - "$(params.path)"